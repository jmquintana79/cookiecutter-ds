# https://python-poetry.org/docs/pyproject/

# PROJECT

[tool.poetry]
name = "{{cookiecutter.repo_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.description}}"
repository = "https://github.com/{{cookiecutter.user}}/{{cookiecutter.repo_name}}"
documentation = "https://{{cookiecutter.user}}.github.io/{{cookiecutter.repo_name}}/"
authors = ["{{cookiecutter.user}}"]
readme = "README.md"
license = "{{cookiecutter.license}}"
packages = [{ include = "{{cookiecutter.package_name}}", from = "src" }]

# SCRIPTS

[tool.poetry.scripts]
{{cookiecutter.repo_name}} = "{{cookiecutter.package_name}}.scripts:main"

# DEPENDENCIES

[tool.poetry.dependencies]
python = "^{{cookiecutter.python_version}}"
setuptools = "^71.1.0"
python-dotenv = "*"
{%- if cookiecutter.data_libraries == "Yes" %}
numpy = "*"
scipy = "*"
pandas = "*"
scikit-learn = "*"
statsmodels = "*"
pyarrow = "*"
vaex = "*"
matplotlib = "*"
seaborn = "*"
pandera = "*"
{%- endif %}

[tool.poetry.group.checks.dependencies]
mypy = "^1.10.1"
pytest = "^8.2.2"
ruff = "^0.5.0"

[tool.poetry.group.commits.dependencies]
commitizen = "^3.27.0"

[tool.poetry.group.dev.dependencies]
invoke = "^2.2.0"

[tool.poetry.group.docs.dependencies]
pdoc = "^14.5.1"
interrogate = "^1.7.0"

[tool.poetry.group.notebooks.dependencies]
ipykernel = "^6.29.4"
nbformat = "^5.10.4"

# CONFIGURATIONS

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true

[tool.mypy]
pretty = true
strict = true
python_version = "{{cookiecutter.python_version}}"
check_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--verbosity=2"
pythonpath = ["src"]

[tool.ruff]
fix = true
indent-width = 4
line-length = 100
target-version = "py{{cookiecutter.python_version.replace('.', '')}}"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D100", "D103"]

# SYSTEMS

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"